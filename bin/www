#!/usr/bin/env node
var app = require('../app');
var debug = require('debug')('lncast:server');
var https = require('https');
var http = require('http');
var fs = require('fs');

//const credentials = {
//    key: fs.readFileSync(process.env.SSL_KEY),
//    cert: fs.readFileSync(process.env.SSL_CERT)
//}

//var https_server = https.createServer(credentials, app);
var http_server = http.createServer(app);
// Redirect from http port 80 to https
//http.createServer(function (req, res) {
//        res.writeHead(301, { "Location": "https://" + req.headers['host'] + req.url  });
//        res.end();
//
//        }).listen(80);

//https_server.listen(443);
//https_server.on('error', onError);
//https_server.on('listening', onListening);

http_server.listen(8080);
http_server.on('error', onError);
http_server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = http_server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
